#!/usr/bin/env bash
version 6

# Declare Logging
FIREHOL_LOG_PREFIX="{{ pillar['firehol_log_prefix'] }}"

# Declare IP groups
public_ip={{ pillar['wan_ip'] }}
internal_network={{ pillar['internal_network'] }}
vpn_tunnel={{ pillar['vpn_network'] }}

# Declare services
internal_clients="ssh http https dns icmp"
internal_servers="ssh http https dns icmp"
internal_server_unifi="tcp/8080,tcp/8443,tcp/8880,tcp/8843 udp/10001"

interface4 {{ pillar['lan_interface'] }} dhcp
    policy return
    server dhcp accept

interface4 {{ pillar['wireguard_interface'] }} vpn src "${vpn_tunnel}"
    server "${internal_servers}" accept
    server "${internal_server_unifi}" accept
    server custom netdata tcp/19999 default accept


interface4 {{ pillar['lan_interface'] }} home src "${internal_network}"
    policy reject #policy accept doesn't incorporate Zero Trust Networking
    server "${internal_servers}" accept
    server "${internal_server_unifi}" accept
    server custom netdata tcp/19999 default accept

{% if pillar['internal_router'] == False %}
# Make sure the traffic coming in comes from valid Internet IPs that is targeting my public IP
interface4 {{ pillar['wan_interface'] }} internet src not "${UNROUTABLE_IPS} ${internal_network}" dst "${public_ip}"
  protection strong 10/sec 10     # Protect me from various kinds of attacks.
  client "${internal_clients}" accept
# The only internet-facing service is Wireguard
  server custom wireguard udp/{{ pillar['listen_port'] }} default accept
{% else %}
# Make sure the traffic coming in is targeting my public IP
interface4 {{ pillar['wan_interface'] }} internet src not "${internal_network}" dst "${public_ip}"
  protection strong 10/sec 10     # Protect me from various kinds of attacks.
  client "${internal_clients}" accept
  server "ssh http https" accept
  server custom netdata tcp/19999 default accept
  server custom wireguard udp/{{ pillar['listen_port'] }} default accept
{% endif %}


router4 internet2home inface {{ pillar['wan_interface'] }} outface {{ pillar['lan_interface'] }}
    masquerade reverse
    client all accept
    server ident reject with tcp-reset

router4 internet2vpn inface {{ pillar['wan_interface'] }} outface {{ pillar['wireguard_interface'] }}
    masquerade reverse
    client all accept
    server ident reject with tcp-reset