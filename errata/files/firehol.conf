{% from 'router/setup.sls' import wan_interface, lan_interface %}
#!/usr/bin/env bash
version 6

# Declare Logging
#FIREHOL_LOG_MODE="NFLOG"

# Declare IP groups
public_ip=$(ip route get 8.8.8.8 | awk '{print $7}')
home_ip="192.168.1.1/24"

# Declare services
internal_clients="ssh http https dns icmp"
internal_servers="ssh http https dns icmp"
internal_server_unifi="tcp/8080,tcp/8443,tcp/8880,tcp/8843 udp/10001"

interface4 {{ lan_interface }} dhcp
    policy return
    server dhcp accept

interface4 {{ lan_interface }} home src "${home_ip}"
    policy reject #policy accept doesn't incorporate Zero Trust Networking
    server "${internal_servers}" accept
    server "${internal_server_unifi}" accept
    server custom netdata tcp/19999 default accept

{% if is_router_internal == 'no' %}
  # Make sure the traffic coming in comes from valid Internet IPs that is targeting my public IP
  interface4 {{ wan_interface }} internet src not "${UNROUTABLE_IPS} ${home_ip}" dst "${public_ip}"
      protection strong 10/sec 10     # Protect me from various kinds of attacks.
      client "${internal_clients}" accept
  # No server statements because my router does not provide any services to the internet
{% else %}
  # Make sure the traffic coming in is targeting my public IP
  interface4 {{ wan_interface }} internet src not "${home_ip}" dst "${public_ip}"
      protection strong 10/sec 10     # Protect me from various kinds of attacks.
      client "${internal_clients}" accept
      server "ssh http https" accept
      server custom netdata tcp/19999 default accept
{% endif %}

router4 internet2home inface {{ wan_interface }} outface {{ lan_interface }}
    masquerade reverse
    client all accept
    server ident reject with tcp-reset
